version: '3'

services:
  server:
    build:
      context: .
      dockerfile: dev.Dockerfile
    ports:
      - 8002:8002
    image: promise-api:server
    container_name: promise-api.server
    networks:
      - test
      - mysql
    depends_on:
      mysql:
        condition: service_healthy
    command: >
      sh -c "npx prisma migrate deploy && npx jest"
    environment:
      TZ: ${TZ}
      PORT: 8002
      STAGE: ${STAGE}
      NODE_ENV: ${NODE_ENV}

      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      INTHASH_KEY: ${INTHASH_KEY}

      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: mysql
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_URL: mysql://${DB_USER}:${DB_PASSWORD}@mysql:${DB_PORT}/${DB_NAME}_${STAGE}

  mysql:
    image: mysql:8.3
    container_name: promise-api.mysql
    ports:
      - ${DB_PORT}:3306
    networks:
      - mysql
    volumes:
      - ./dockerdata/mysql.${STAGE}:/var/lib/mysql
      - ./mysql:/docker-entrypoint-initdb.d:ro
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --performance-schema=OFF
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      USER: ${DB_USER}
      PASSWORD: ${DB_PASSWORD}
      DATABASE: ${DB_NAME}
      STAGE: ${STAGE}
      TZ: ${TZ}
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mysql -uroot -p${DB_PASSWORD} ${DB_NAME}_${STAGE} -e "SELECT 1"']
      interval: 3s
      timeout: 5s
      retries: 10

  https:
    build:
      context: https
      args:
        - PORT=${PORT}
        - HTTPS=${HTTPS}
    image: promise-api:https
    container_name: promise-api.https
    networks:
      - https
    ports:
      - 80:80
      - 443:443
    restart: always

networks:
  test:
  mysql:
  https:
