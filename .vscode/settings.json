{
  "cSpell.customDictionaries": {
    "project-dictionary": {
      "name": "Promise API",
      "path": "${workspaceRoot}/.vscode/dictionary.txt",
      "description": "Words used in this project",
      "addWords": true,
      "scope": "workspace"
    },
    "custom": true,
    "internal-terms": false
  },
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit"
  },
  "eslint.useFlatConfig": true,
  "editor.formatOnSave": true,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "package.json": "package-lock.json, yarn.lock, bun.lockb",
    ".env.example": ".env, .env.*",
    ".env-cmdrc.example.js": ".env-cmdrc, .env-cmdrc.*",
    "*.ts": "${capture}.js, ${capture}.d.ts, ${capture}.mock.ts, ${capture}.spec.ts"
  },
  "material-icon-theme.activeIconPack": "nest",
  "material-icon-theme.files.associations": {
    "*.entity.ts": "nest-pipe",
    "*.dto.ts": "nest-guard",
    "*.processor.ts": "nest-gateway",
    "*.enum.ts": "nest-filter",
    "*.interface.ts": "nest-filter",
    "*.interceptor.ts": "nest-gateway",
    "*.exception.ts": "nest-filter",
    "*.strategy.ts": "nest-decorator",
    "*.type.ts": "nest-filter",
    "*.schema.ts": "nest-pipe",
    "*.mock.ts": "test-ts"
  },
  "material-icon-theme.folders.associations": {
    "e2e-specs": "test"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "typescript.tsdk": "node_modules/typescript/lib"
}